<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.jasonlss.smartdoorapp">

    <!-- 基础模块（必须加入以下声明）START -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <!-- 基础模块 END -->

    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:name=".MyLeanCloudApp"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <!-- 即时通讯模块、推送（均需要加入以下声明） START -->
        <!-- 即时通讯模块、推送都要使用 PushService -->
        <service android:name="com.avos.avoscloud.PushService"/>
        <receiver android:name="com.avos.avoscloud.AVBroadcastReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
                <action android:name="android.intent.action.USER_PRESENT"/>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
        </receiver>
        <!-- 即时通讯模块、推送 END -->
        <!-- 即时通讯模块、推送 END -->


        <!-- 反馈组件（需要加入以下声明）START -->
        <activity
            android:name="com.avos.avoscloud.feedback.ThreadActivity" >
        </activity>
        <!-- 反馈组件 END -->


        <activity android:name=".MainActivity">
            <!--<intent-filter>-->
            <!--<action android:name="android.intent.action.MAIN" />-->
            <!--<category android:name="android.intent.category.LAUNCHER" />-->
            <!--</intent-filter>-->

            <!--
              Uncomment the following intent filter block to enable this activity to
              launch automatically on boot, and re-launch if the app terminates.
            -->

            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.HOME"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>

        </activity>
    </application>
</manifest>